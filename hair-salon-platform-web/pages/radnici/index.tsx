import { useState } from "react";

import type { NextPage } from "next";
import Head from "next/head";
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
  Container,
  Grid,
  Typography,
  Button,
  Drawer,
  IconButton,
} from "@mui/material";
import { Delete, Edit } from "@mui/icons-material";
import { useQueryClient, useQuery, useMutation } from "react-query";

import UserForm from "@/components/UserForm";
import Popconfirm from "@/components/Popconfirm";

import dayjs from "lib/dayjs";
import { getWorkers, deleteUser } from "api";
import { CustomersResponse } from "lib/types";
import { ROLES } from "lib/constants";
import styles from "./styles.module.scss";

const Podesavanje: NextPage = () => {
  const [showForm, setShowForm] = useState(false);
  const queryClient = useQueryClient();
  const { data: response } = useQuery<CustomersResponse>("workers", getWorkers);
  const users = response?.data;

  const onUserFormChange = () => {
    queryClient.invalidateQueries("workers");
    console.log("Finished");
  };

  // Delete Reservation
  const { mutate: handleDelete } = useMutation(
    (id: number) => {
      return deleteUser(id);
    },
    {
      onSuccess: () => {
        queryClient.invalidateQueries(["workers"]);
      },
    }
  );

  return (
    <>
      <div className={styles.container}>
        <Head>
          <title>Radnici</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <Container>
            <Grid
              container
              sx={{ justifyContent: "space-between", mb: 2, mt: 3 }}
            >
              <Grid item>
                <Typography variant="h4">Radnici</Typography>
              </Grid>
              <Grid item>
                <Button variant="contained" onClick={() => setShowForm(true)}>
                  Dodaj radnika
                </Button>
              </Grid>
            </Grid>
            <TableContainer component={Paper}>
              <Table sx={{ minWidth: 650 }} aria-label="simple table">
                <TableHead>
                  <TableRow>
                    <TableCell>Ime</TableCell>
                    <TableCell align="right">Broj telefona</TableCell>
                    <TableCell align="right">Datum rodjenja</TableCell>
                    <TableCell align="right">Podesavanje</TableCell>
                  </TableRow>
                </TableHead>
                <TableBody>
                  {users?.map((user) => (
                    <TableRow
                      key={user.id}
                      sx={{ "&:last-child td, &:last-child th": { border: 0 } }}
                    >
                      <TableCell>
                        {user.firstName} {user.lastName}
                      </TableCell>
                      <TableCell align="right">{user.phoneNumber}</TableCell>
                      <TableCell align="right">
                        {dayjs(user.dateOfBirth).format("DD.MM.YYYY")}
                      </TableCell>
                      <TableCell align="right">
                        <IconButton>
                          <Edit />
                        </IconButton>
                        <Popconfirm onConfirm={() => handleDelete(user.id)}>
                          <IconButton>
                            <Delete />
                          </IconButton>
                        </Popconfirm>
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </TableContainer>
          </Container>
        </main>
      </div>

      <Drawer
        anchor="right"
        open={showForm}
        classes={{ paper: styles.userDrawer }}
        onClose={() => {
          setShowForm(false);
        }}
      >
        <UserForm
          title="Dodaj radnika"
          role={ROLES.EMPLOYEE}
          onChange={onUserFormChange}
        />
      </Drawer>
    </>
  );
};

export default Podesavanje;
