import { useState } from "react";

import type { NextPage } from "next";
import Head from "next/head";
import { Container, Grid, Typography, Button, Drawer } from "@mui/material";
import { useQueryClient, useQuery, useMutation } from "react-query";

import UserForm from "@/components/Users/UserForm";

import { getWorkers, deleteUser } from "api";
import { CustomersResponse } from "lib/types";
import { ROLES } from "lib/constants";
import styles from "./styles.module.scss";
import UserTable from "@/components/Users/UserTable";

const Workers: NextPage = () => {
  const [showForm, setShowForm] = useState(false);
  const queryClient = useQueryClient();
  const { data: response } = useQuery<CustomersResponse>("workers", getWorkers);
  const users = response?.data;

  const onUserFormChange = () => {
    queryClient.invalidateQueries("workers");
    setShowForm(false);
  };

  // Delete Reservation
  const { mutate: handleDelete } = useMutation(
    (id: number) => {
      return deleteUser(id);
    },
    {
      onSuccess: () => {
        queryClient.invalidateQueries(["workers"]);
      },
    }
  );

  return (
    <>
      <div className={styles.container}>
        <Head>
          <title>Radnici</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <Container>
            <Grid
              container
              sx={{ justifyContent: "space-between", mb: 2, mt: 3 }}
            >
              <Grid item>
                <Typography variant="h4">Radnici</Typography>
              </Grid>
              <Grid item>
                <Button variant="contained" onClick={() => setShowForm(true)}>
                  Dodaj radnika
                </Button>
              </Grid>
            </Grid>
            {users && <UserTable users={users} />}
          </Container>
        </main>
      </div>

      <Drawer
        anchor="right"
        open={showForm}
        classes={{ paper: styles.userDrawer }}
        onClose={() => {
          setShowForm(false);
        }}
      >
        <UserForm
          title="Dodaj radnika"
          role={ROLES.EMPLOYEE}
          onChange={onUserFormChange}
        />
      </Drawer>
    </>
  );
};

export default Workers;
